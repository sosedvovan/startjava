---можно вызывать справку по команде и там смотреть ее ключи
nano Calculator.java  --- открыть файл для редактирования в терминале
cat Calculator.java  ---- просто отобразить содержимое файла
cd ../..  --- шаг на 2-а уровеня выше в иерархии папок
cd com/startjava/ --- зайти в эту папку
rm -v --- ремув-удаление
mkdir -pv com/startjava  --- создание папок и подпапок(пакетов папок)  -p означает родительскую директорию
можно создать сразу несколько папок через пробел
mv -v lesson1 lesson2   ----переименовали файл lesson1 в lesson2 а ключ -v покажет результат
mv lesson2 com/startjava  ---- переместили папку lesson2 в com/startjava
ls -a  ----отобразит все немысленной в папке  (ключ -l -отобразить списком)
tree src/  или просто tree ---   покажет структуру папок в папке src с вложенными файлами
pwd     ----- покажет папку в которой в данный момент находится терминал


		-------ДАЛЕЕ ПРО КОМПИЛЯЦИЮ ЧЕРЕЗ ТЕРМИНАЛ-----------
	---- при компиляции java файлов надо находится в той папке, где находится папка src
	---- рядом с папкой src надо создать папку out для хранения .class файлов

	---- находясь в той папке, где находится папка src и папка out компилируем файлы проекта след образом:
	--- javac src/com/startjava/DogTest.java src/com/startjava/Dog.java -d out/ ---
те в команде javac перечислили через пробел связанные файлы .java с их путем --src/com/startjava/---,

 		--- javac src/com/startjava/*.java -d out/ --- можно так еще скомпилир все файлы

а ---   -d out/  --- означает что файлы .class будут помещаться в папку out.

		---- ТЕПЕРЬ НАШИ СКОМПИЛИРОВАННЫЕ ФАЛЫ .class БУДУТ НАХОДИТСЯ В ПАПКЕ out.
		----- И ЧТОБЫ JVM ИХ ВЫПОЛНИЛА запускаем класс с методом main() след. образом:
		---- java -classpath out/ DogTest  ------
		---- где -classpath или -cp указатель на папку out/ в кот. лежит главный класс DogTest.



----- Если в самих классах указать их пекидж(А так и надо если клас не в корне папки src): package com.startjava; 
-----то при компиляции в папке out создастся такая же структура папок как и в папке src.

-----и запускаем главный класс  ----  java -classpath out/ com.startjava.lesson_3.DogTest.class


-----то если главный клас с методом мэйн  лежит в корне папки src то его jvm  запускает командой:
---- java -classpath out/ DogTest  ------ 


-----ТЕПЕРЬ ПОРАБОТАЕМ С GIT
----в папке в кот находятся src и out  открываем терминал и прописываем:
---- git init ------(но необязат. создавать новый репозиторий можно и в одном работать)
---- теперь локальный git создаст одноименный репозиторий у себя. И будет отслеживать содержимое
---- те при команде git status будет отображаться информация отпапке src и out
---- НО out НАМ НЕ НАДО!
---- и чтобы папки типа out никогда не отслеживались, не индексировались и не отправлялись на удален. репозиторий:
--- надо создать файл(скрытый будет) .gitignore в папке, в кот находятся src и out  (ls -a  -отобразит все немысленной в папке)
--- как его создать в виндоус- см. статью тк в виндоус проблема поставить . в начале файла
---далее открываем этот файл и там прописываем то, что git не должен индексировать  ---out--- если новый репозиторий создан рядом с out
---или указываем еще и путь к этой папке если репозиторий создан в иерархически высшей папке.
			--- и git навсегда забудет про папки и файлы перечисленные в файле .gitignore 



.gitignore in WINDOUS:
Создай файл gitignore.txt
Отредактируй в текстовом редакторе по вкусу
Далее шифт + правый клик мышкой внутри папки, где лежит файл
Выбираешь "Open command window here" или как это там по-русски
Запустится cmd.exe уже в этой папке. Пишешь ren gitignore.txt .gitignore, файл переименовывается.





